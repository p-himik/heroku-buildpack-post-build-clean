#!/usr/bin/env bash
#
# Find and delete all files/directories matching specified globs
# Globs are separated by newlines in .slug-post-clean located in the build directory's root
# This is useful for deleting files created after Heroku's built-in cleanup process
# based on .slugignore, e.g. files/dirs in installed dependency folders

set -euo pipefail

readonly BUILDPACK_DIR=$(cd $(dirname $0); cd ..; pwd)

# Common helper functions
source $BUILDPACK_DIR/bin/util/common.sh

readonly CLEAN_FILES=.slug-post-clean
readonly BUILD_DIR=$1

cd ${BUILD_DIR}

#######################################
# Locate files/dirs in PWD matching globs in $CLEAN_FILES
# Globals:
#   CLEAN_FILES
#   fileArray
# Arguments:
#   None
# Returns:
#   None
#######################################
findMatchingFiles()
{
  [[ -f ${CLEAN_FILES} ]] || error_exit "Could not find file ${CLEAN_FILES}"

  status "Finding all files and directories from ${CLEAN_FILES}"

  # Recurse through all matching files/dirs and populate a new array with the result
  fileArray=()
  while IFS= read -r line; do
    [[ "$line" =~ '^ *#' ]] && continue
    printf 'Running `find %s`\n' "$line"
    while IFS= read -r -d $'\0' file; do
      fileArray+=("$file")
    done < <(find $line -print0)
  done < "${CLEAN_FILES}"
}

#######################################
# Delete all matching files and directories
# Globals:
#   fileArray
# Arguments:
#   None
# Returns:
#   None
#######################################
runRemoval()
{
  [[ -z ${fileArray+x} ]] && error_exit "No files or directories to remove from slug"

  status "Removing all matching files and directories from slug"
  local fileOrDir

  for fileOrDir in "${fileArray[@]}"; do
    rm -rf "$fileOrDir"
  done

  echo "Successfully cleaned ${#fileArray[@]} files/directories from slug"
}

# Run!
findMatchingFiles
runRemoval
